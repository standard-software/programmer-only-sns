{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["parts","string","subFirst","isFirst","renderer","marked","Renderer","link","href","title","text","external","test","target","prefix","setOptions","dateFormat","dateText","dateToString","stringToDate","getFetchData","url","a","fetch","then","response","json","data","result","postFetchData","postData","authorization","method","mode","cache","credentials","headers","Authorization","redirect","referrerPolicy","body","JSON","stringify","putFetchData","complementUserId","shortId","userArray","index","findIndex","user","id","complementTextId","commentArray","comment","commentId","App","useState","setCommentArray","setUserArray","inputText","setInputText","inputUserName","setInputUserName","inputUserDescription","setInputUserDescription","inputReplyUserId","setInputReplyUserId","inputReplyTextId","setInputReplyTextId","limit","getCommentArray","userData","_blockUserIds","localStorage","getItem","textAllURL","skip","isNull","split","map","v","join","likeData","imageData","_commentArray","commentData","item","likeCount","sum","filter","like","like_count","imageBase64Array","image","bind_text_id","base64","push","userName","find","_user_id","name","replyToUserName","isUndefined","in_reply_to_user_id","replyToTextId","in_reply_to_text_id","_replyToTextId","userId","createdAt","_created_at","updatedAt","_updated_at","childComment","reverse","postText","replyUserId","replyTextId","postUserName","description","useEffect","myUserItem","initialValue","element","document","documentElement","bottom","scrollHeight","clientHeight","window","scroll","commentOutput","onClick","style","cursor","dangerouslySetInnerHTML","__html","replaceAll","length","img","imgIndex","src","viewCommentArray","c","setChildComment","targetCommentArray","level","className","outputChildComment","i","marginLeft","minHeight","position","backgroundColor","paddingLeft","paddingTop","paddingBottom","type","value","onChange","e","placeholder","setItem","scrollFlag","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.859093f4.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport marked from 'marked';\nimport parts, {\n  isUndefined, isNull, stringToDate, dateToString,\n  initialValue, sum,\n} from \"@standard-software/parts\"\nconst { subFirst, isFirst } = parts.string;\n\n// marked.js support target_blank link\nconst renderer = new marked.Renderer()\nrenderer.link = (href, title, text) => {\n    const external = !/^\\//.test(href);\n    const usePrefix = external && !/^http/.test(text);\n    const target = external ? ' target=\"_blank\"' : '';\n    const prefix = usePrefix ? \"<i class=\\\"fa fa-fw fa-external-link\\\"></i> \" : '';\n    title = title ? ` title=\"${title}\"` : '';\n    href= ` href=\"${href}\"`\n\n    return `<a${href}${target}${title}>${prefix}${text}</a>`\n}\nmarked.setOptions({\n  renderer\n})\n\nconst dateFormat = (dateText) => {\n  return dateToString(\n    stringToDate(dateText, 'YYYY-MM-DDTHH:mm:ss.SSSZ'),\n    'MM/DD HH:mm:ss'\n  )\n}\n\nconst getFetchData = async (url) => {\n  let result;\n  await fetch(url)\n  .then((response) => response.json())\n  .then((data) => {\n    result = data\n  })\n  return result;\n}\n\nconst postFetchData = async (url, postData, authorization) => {\n  let result = await fetch(url, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: authorization,\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n    body: JSON.stringify(postData)\n  });\n  return result.json();\n}\n\nconst putFetchData = async (url, postData, authorization) => {\n  let result = await fetch(url, {\n    method: \"PUT\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: authorization,\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"strict-origin-when-cross-origin\",\n    body: JSON.stringify(postData)\n  });\n  return result.json();\n}\n\nconst complementUserId = (shortId, userArray) => {\n  // console.log('complementUserId', { userArray, shortId });\n  const index = userArray.findIndex(user => isFirst(user.id, shortId))\n  // console.log({ userArray, shortId, index });\n  if (index === -1) {\n    return ''\n  } else {\n    return userArray[index].id\n  }\n}\n\nconst complementTextId = (shortId, commentArray) => {\n  // console.log('complementTextId', { commentArray, shortId });\n  const index = commentArray.findIndex(comment => isFirst(comment.commentId, shortId))\n  // console.log({ commentArray, shortId, index });\n  if (index === -1) {\n    return ''\n  } else {\n    return commentArray[index].commentId\n  }\n}\n\nconst App = () => {\n\n  const [commentArray, setCommentArray] = useState([]);\n  const [userArray, setUserArray] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [inputUserName, setInputUserName] = useState('');\n  const [inputUserDescription, setInputUserDescription] = useState('');\n  const [inputReplyUserId, setInputReplyUserId] = useState('');\n  const [inputReplyTextId, setInputReplyTextId] = useState('');\n  const [limit, setLimit] = useState(1000);\n  const [skip, setSkip] = useState(0);\n\n  const getCommentArray = async () => {\n    const userData = await getFetchData('https://versatileapi.herokuapp.com/api/user/all/');\n    setUserArray(userData);\n\n    const _blockUserIds = localStorage.getItem('posns_block_user_ids');\n\n    const textAllURL = (limit=100, skip=0) => {\n      return 'https://versatileapi.herokuapp.com/api/text/all/?$orderby=_created_at desc' +\n      (limit === 0 ? '' :\n        `&$limit=${limit}`\n      ) +\n      (skip === 0 ? '' :\n        `&$skip=${skip}`\n      ) +\n      (\n        isNull(_blockUserIds) ? ''\n        : `&$filter=_user_id ne ` +\n          _blockUserIds.split(',')\n          .map(v=>`'${complementUserId(v, userData)}'`)\n          .join(' and _user_id ne ')\n      )\n    }\n\n    const likeData = await getFetchData(\n      'https://versatileapi.herokuapp.com/api/like/all/'\n    );\n    // console.log({likeData})\n\n    const imageData = await getFetchData(\n      'https://versatileapi.herokuapp.com/api/image/all/'\n    );\n    // console.log({imageData})\n\n    let _commentArray = [];\n    const commentData = await getFetchData(textAllURL(limit))\n    // console.log({commentData})\n    for (const item of commentData) {\n      let likeCount = sum(likeData.filter(like => like.id === item.id).map(v => v.like_count))\n      let imageBase64Array = imageData.filter(image => image.bind_text_id === item.id).map(v => v.base64)\n\n      _commentArray.push({\n        userName:\n        userData.find((user) => {\n            return user.id === item._user_id;\n          })?.name ?? \"\",\n        replyToUserName:\n          isUndefined(item.in_reply_to_user_id) ? '' :\n          userData.find((user) => {\n            return user.id === item.in_reply_to_user_id;\n          })?.name ?? \"-\",\n        replyToTextId:\n          isUndefined(item.in_reply_to_text_id) ? '' :\n          subFirst(item.in_reply_to_text_id, 8),\n        _replyToTextId: item.in_reply_to_text_id,\n        item: item,\n        userId: item._user_id,\n        createdAt: dateFormat(item._created_at),\n        updatedAt: dateFormat(item._updated_at),\n        commentId: item.id,\n        text: item.text,\n        likeCount,\n        childComment: [],\n        imageBase64Array,\n      });\n    }\n\n    _commentArray.reverse();\n    // console.log({_commentArray})\n    return _commentArray;\n  }\n\n  const postText = async (text, replyUserId, replyTextId) => {\n    const postData = {\n      text\n    }\n    if (replyUserId !== '') {\n      postData.in_reply_to_user_id = replyUserId\n    }\n    if (replyTextId !== '') {\n      postData.in_reply_to_text_id = replyTextId\n    }\n    // console.log({postData})\n    const response = await postFetchData(\n      'https://versatileapi.herokuapp.com/api/text',\n      postData,\n      \"HelloWorld\",\n    );\n    return response;\n  }\n\n  const postUserName = async (name, description) => {\n    const response = postFetchData(\n      'https://versatileapi.herokuapp.com/api/user/create_user',\n      { name, description },\n      \"HelloWorld\",\n    )\n    return response;\n  }\n\n  // ページロード時のデータ読み込み処理\n  useEffect(() => {\n    (async () => {\n      setCommentArray(await getCommentArray());\n\n      // // ブロックユーザーID指定\n      // localStorage.setItem('posns_block_user_ids', '2acaea0d5e,cce8bd6219');\n\n      const myUserItem = {\n        name: initialValue(localStorage.getItem('posns_username'), '', [null]),\n        description: initialValue(localStorage.getItem('posns_userdesc'), '', [null]),\n      }\n\n      var element = document.documentElement;\n      var bottom = element.scrollHeight - element.clientHeight;\n      window.scroll(0, bottom);\n\n      // console.log({myUserItem})\n      setInputUserName(myUserItem.name);\n      setInputUserDescription(myUserItem.description)\n    })();\n  }, []);\n\n  const commentOutput = (comment) => {\n    return <>\n      {comment.createdAt === comment.updatedAt\n        ? `${comment.createdAt}`\n        : `${comment.createdAt}|${comment.updatedAt}`}\n      {`[${subFirst(comment.commentId, 8)}]`}\n      <span\n        onClick={async () => {\n          await putFetchData(\n            `https://versatileapi.herokuapp.com/api/like/${comment.commentId}`,\n            { like_count: comment.likeCount + 1 },\n            'LOVE',\n          );\n          setCommentArray(await getCommentArray());\n        }}\n        style={{ cursor: 'pointer' }}\n      >\n        {`${comment.likeCount !== 0 ? ' 👍' : ' 👍'}`}\n      </span>\n      {comment.likeCount === 0 ? '' : `💖${comment.likeCount}`}\n      <span\n        onClick={async () => {\n          await putFetchData(\n            `https://versatileapi.herokuapp.com/api/like/${comment.commentId}`,\n            { like_count: comment.likeCount - 1 },\n            'LOVE',\n          );\n          setCommentArray(await getCommentArray());\n        }}\n        style={{ cursor: 'pointer' }}\n      >\n        {`${comment.likeCount !== 0 ? ' 👎' : ''}`}\n      </span>\n      <br />\n      {`${comment.userName} [${subFirst(comment.userId, 10)}] `}\n      <br />\n      {\n        comment.replyToUserName === '' && comment.replyToTextId === '' ? null\n        : comment.replyToTextId === '' ? <>{`TO:${comment.replyToUserName}`}<br /></>\n        : comment.replyToUserName === '' ? <>{`REPLY:${comment.replyToTextId}`}<br /></>\n        : <>{`TO:${comment.replyToUserName} REPLY:${comment.replyToTextId}`}<br /></>\n      }\n\n      <div dangerouslySetInnerHTML={\n        {\n          __html: marked(\n            comment.text.replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\\n', '  \\n')\n          )\n        }\n      } />\n      {/* {\n        comment.text\n        .split(/(\\n)/).map((v, i) => v === '\\n' ? <br key={i} /> : v)\n      } */}\n\n      {comment.imageBase64Array.length === 0 ? null :\n        <>\n          <br />\n          {comment.imageBase64Array.map((img, imgIndex) => {\n            return (\n              // eslint-disable-next-line jsx-a11y/alt-text\n              <img key={imgIndex} src={img} />\n            );\n          })}\n        </>\n      }\n\n    </>\n  }\n\n  // ルートに表示されるものだけをフィルタしている\n  const viewCommentArray = commentArray.filter(comment => {\n    return (isUndefined(comment._replyToTextId)) ||\n      isUndefined(commentArray.find(c => c.commentId === comment._replyToTextId))\n  });\n\n\n  const setChildComment = (targetCommentArray, level = 0) => {\n    for (const item of targetCommentArray) {\n      item.childComment = commentArray.filter(c => c._replyToTextId === item.commentId);\n      item.level = level;\n      if (1 <= item.childComment.length) {\n        setChildComment(item.childComment, level + 1);\n      }\n    }\n  }\n  setChildComment(viewCommentArray)\n\n  const outputChildComment = (targetCommentArray) => {\n    const result = (<>\n      {\n        targetCommentArray.map((comment, i) => {\n          return (\n            <div key={comment.commentId} style={{ marginLeft: `${30}px` }}>\n                {commentOutput(comment)}\n                <hr />\n                {1 <= comment.childComment.length ? outputChildComment( comment.childComment) : null}\n            </div>\n          )\n        })\n      }\n    </>)\n    return result;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n      <div>\n        {outputChildComment(viewCommentArray)}\n\n        <div\n          style={{\n            minHeight: '130px'\n          }}\n        >\n        </div>\n\n        <div\n          style={{\n            position: 'fixed',\n            bottom: '0',\n            backgroundColor: 'white',\n            paddingLeft: '30px',\n            paddingTop: '30px',\n            paddingBottom: '30px',\n          }}\n        >\n          <input type=\"text\" value={inputUserName}\n            onChange={(e) => {\n              setInputUserName(e.target.value);\n            }}\n            placeholder='ユーザー名'\n          />\n          <input type=\"text\" value={inputUserDescription}\n            onChange={(e) => {\n              setInputUserDescription(e.target.value);\n            }}\n            placeholder='自己紹介文'\n          />\n          <button onClick={async () => {\n            await postUserName(inputUserName, inputUserDescription);\n            localStorage.setItem('posns_username', inputUserName);\n            localStorage.setItem('posns_userdesc', inputUserDescription);\n            setCommentArray(await getCommentArray());\n          }}>ユーザー名設定</button>\n          <br />\n          <input type=\"text\" value={inputReplyUserId}\n            onChange={(e) => {\n              setInputReplyUserId(e.target.value);\n            }}\n            placeholder='返信ユーザーID'\n          />\n          <input type=\"text\" value={inputReplyTextId}\n            onChange={(e) => {\n              setInputReplyTextId(e.target.value);\n            }}\n            placeholder='返信テキストID'\n          />\n          <br />\n          <textarea value={inputText}\n            onChange={(e) => {\n              setInputText(e.target.value);\n            }}\n            placeholder='投稿内容'\n          />\n          <button onClick={async () => {\n            let scrollFlag = false;\n\n            if (inputText !== '') {\n              if (inputReplyTextId === '') {\n                scrollFlag = true;\n              }\n            }\n\n            if (inputText !== '') {\n              await postText(\n                inputText,\n                complementUserId(inputReplyUserId, userArray),\n                complementTextId(inputReplyTextId, commentArray)\n              );\n              setInputText('');\n              setInputReplyUserId('');\n              setInputReplyTextId('');\n              // console.log('postText', inputText)\n            }\n\n            setCommentArray(await getCommentArray());\n\n            if (scrollFlag) {\n              var element = document.documentElement;\n              var bottom = element.scrollHeight - element.clientHeight;\n              window.scroll(0, bottom);\n            }\n\n          }}>書き込み/表示更新</button>\n          <br />\n        </div>\n\n        <br />\n\n      </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}