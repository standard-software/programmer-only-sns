{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["parts","string","subFirst","isFirst","dateFormat","dateText","dateToString","stringToDate","getFetchData","url","a","fetch","then","response","json","data","result","complementUserId","shortId","userArray","index","findIndex","user","id","complementTextId","commentArray","comment","commentId","App","useState","setCommentArray","setUserArray","inputText","setInputText","inputUserName","setInputUserName","inputUserDescription","setInputUserDescription","inputReplyUserId","setInputReplyUserId","inputReplyTextId","setInputReplyTextId","getCommentArray","userData","_blockUserIds","localStorage","getItem","textAllURL","isNull","split","map","v","join","likeData","imageData","_commentArray","commentData","item","likeCount","sum","filter","like","like_count","imageBase64Array","image","bind_text_id","base64","push","userName","find","_user_id","name","replyToUserName","isUndefined","in_reply_to_user_id","replyToTextId","in_reply_to_text_id","_replyToTextId","userId","createdAt","_created_at","updatedAt","_updated_at","text","childComment","reverse","postText","replyUserId","replyTextId","postData","method","mode","cache","credentials","headers","Authorization","redirect","referrerPolicy","body","JSON","stringify","postUserName","description","reloadComment","useEffect","myUserItem","initialValue","commentOutput","dangerouslySetInnerHTML","__html","marked","replaceAll","length","img","imgIndex","src","viewCommentArray","c","setChildComment","targetCommentArray","level","className","outputChildComment","i","style","marginLeft","type","value","onChange","e","target","placeholder","onClick","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5265e7f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport marked from 'marked';\nimport parts, {\n  isUndefined, isNull, stringToDate, dateToString,\n  initialValue, sum,\n} from \"@standard-software/parts\"\nconst { subFirst, isFirst } = parts.string;\n\nconst dateFormat = (dateText) => {\n  return dateToString(\n    stringToDate(dateText, 'YYYY-MM-DDTHH:mm:ss.SSSZ'),\n    'MM/DD HH:mm:ss'\n  )\n}\n\nconst getFetchData = async (url) => {\n  let result;\n  await fetch(url)\n  .then((response) => response.json())\n  .then((data) => {\n    result = data\n  })\n  return result;\n}\n\nconst complementUserId = (shortId, userArray) => {\n  // console.log('complementUserId', { userArray, shortId });\n  const index = userArray.findIndex(user => isFirst(user.id, shortId))\n  // console.log({ userArray, shortId, index });\n  if (index === -1) {\n    return ''\n  } else {\n    return userArray[index].id\n  }\n}\n\nconst complementTextId = (shortId, commentArray) => {\n  // console.log('complementTextId', { commentArray, shortId });\n  const index = commentArray.findIndex(comment => isFirst(comment.commentId, shortId))\n  // console.log({ commentArray, shortId, index });\n  if (index === -1) {\n    return ''\n  } else {\n    return commentArray[index].commentId\n  }\n}\n\nconst App = () => {\n\n  const [commentArray, setCommentArray] = useState([]);\n  const [userArray, setUserArray] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [inputUserName, setInputUserName] = useState('');\n  const [inputUserDescription, setInputUserDescription] = useState('');\n  const [inputReplyUserId, setInputReplyUserId] = useState('');\n  const [inputReplyTextId, setInputReplyTextId] = useState('');\n\n  const getCommentArray = async () => {\n    const userData = await getFetchData('https://versatileapi.herokuapp.com/api/user/all/');\n    setUserArray(userData);\n\n    const _blockUserIds = localStorage.getItem('posns_block_user_ids');\n\n    const textAllURL =\n      'https://versatileapi.herokuapp.com/api/text/all/?$orderby=_created_at desc&$limit=5000' +\n      (\n        isNull(_blockUserIds) ? ''\n        : `&$filter=_user_id ne ` +\n          _blockUserIds.split(',')\n          .map(v=>`'${complementUserId(v, userData)}'`)\n          .join(' and _user_id ne ')\n      )\n\n    const likeData = await getFetchData(\n      'https://versatileapi.herokuapp.com/api/like/all/'\n    );\n    // console.log({likeData})\n\n    const imageData = await getFetchData(\n      'https://versatileapi.herokuapp.com/api/image/all/'\n    );\n    // console.log({imageData})\n\n    let _commentArray = [];\n    const commentData = await getFetchData(textAllURL)\n    // console.log({commentData})\n    for (const item of commentData) {\n      let likeCount = sum(likeData.filter(like => like.id === item.id).map(v => v.like_count))\n      let imageBase64Array = imageData.filter(image => image.bind_text_id === item.id).map(v => v.base64)\n\n      _commentArray.push({\n        userName:\n        userData.find((user) => {\n            return user.id === item._user_id;\n          })?.name ?? \"\",\n        replyToUserName:\n          isUndefined(item.in_reply_to_user_id) ? '' :\n          userData.find((user) => {\n            return user.id === item.in_reply_to_user_id;\n          })?.name ?? \"-\",\n        replyToTextId:\n          isUndefined(item.in_reply_to_text_id) ? '' :\n          subFirst(item.in_reply_to_text_id, 8),\n        _replyToTextId: item.in_reply_to_text_id,\n        item: item,\n        userId: item._user_id,\n        createdAt: dateFormat(item._created_at),\n        updatedAt: dateFormat(item._updated_at),\n        commentId: item.id,\n        text: item.text,\n        likeCount,\n        childComment: [],\n        imageBase64Array,\n      });\n    }\n\n    _commentArray.reverse();\n    // console.log({_commentArray})\n    return _commentArray;\n  }\n\n  const postText = async (text, replyUserId, replyTextId) => {\n    const postData = {\n      text\n    }\n    if (replyUserId !== '') {\n      postData.in_reply_to_user_id = replyUserId\n    }\n    if (replyTextId !== '') {\n      postData.in_reply_to_text_id = replyTextId\n    }\n    // console.log({postData})\n    const response = await fetch('https://versatileapi.herokuapp.com/api/text', {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"HelloWorld\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify(postData)\n    });\n    return response.json();\n  }\n\n  const postUserName = async (name, description) => {\n    const response = await fetch('https://versatileapi.herokuapp.com/api/user/create_user', {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"HelloWorld\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: JSON.stringify({ name, description })\n    });\n\n    return response.json();\n  }\n\n  const reloadComment = () => {\n    (async () => {\n      setCommentArray(await getCommentArray());\n    })();\n  }\n\n  // ページロード時のデータ読み込み処理\n  useEffect(() => {\n    (async () => {\n      setCommentArray(await getCommentArray());\n\n      // // ブロックユーザーID指定\n      // localStorage.setItem('posns_block_user_ids', '2acaea0d5e,cce8bd6219');\n\n      const myUserItem = {\n        name: initialValue(localStorage.getItem('posns_username'), '', [null]),\n        description: initialValue(localStorage.getItem('posns_userdesc'), '', [null]),\n      }\n      // console.log({myUserItem})\n      setInputUserName(myUserItem.name);\n      setInputUserDescription(myUserItem.description)\n    })();\n  }, []);\n\n  const commentOutput = (comment) => {\n    return <>\n      {comment.createdAt === comment.updatedAt\n        ? `${comment.createdAt}`\n        : `${comment.createdAt}|${comment.updatedAt}`}\n      {`[${subFirst(comment.commentId, 8)}]`}\n      {`${comment.likeCount !== 0 ? ' 💖' + comment.likeCount : ''}`}\n      <br />\n      {`${comment.userName} [${subFirst(comment.userId, 10)}] `}\n      <br />\n      {\n        comment.replyToUserName === '' && comment.replyToTextId === '' ? null\n        : comment.replyToTextId === '' ? <>{`TO:${comment.replyToUserName}`}<br /></>\n        : comment.replyToUserName === '' ? <>{`REPLY:${comment.replyToTextId}`}<br /></>\n        : <>{`TO:${comment.replyToUserName} REPLY:${comment.replyToTextId}`}<br /></>\n      }\n\n      <div dangerouslySetInnerHTML={\n        {\n          __html: marked(\n            comment.text.replaceAll('<', '&lt;').replaceAll('>', '&gt;').replaceAll('\\n', '  \\n')\n          )\n        }\n      } />\n      {/* {\n        comment.text\n        .split(/(\\n)/).map((v, i) => v === '\\n' ? <br key={i} /> : v)\n      } */}\n\n      {comment.imageBase64Array.length === 0 ? null :\n        <>\n          <br />\n          {comment.imageBase64Array.map((img, imgIndex) => {\n            return (\n              // eslint-disable-next-line jsx-a11y/alt-text\n              <img key={imgIndex} src={img} />\n            );\n          })}\n        </>\n      }\n\n    </>\n  }\n\n  // ルートに表示されるものだけをフィルタしている\n  const viewCommentArray = commentArray.filter(comment => {\n    return (isUndefined(comment._replyToTextId)) ||\n      isUndefined(commentArray.find(c => c.commentId === comment._replyToTextId))\n  });\n\n\n  const setChildComment = (targetCommentArray, level = 0) => {\n    for (const item of targetCommentArray) {\n      item.childComment = commentArray.filter(c => c._replyToTextId === item.commentId);\n      item.level = level;\n      if (1 <= item.childComment.length) {\n        setChildComment(item.childComment, level + 1);\n      }\n    }\n  }\n  setChildComment(viewCommentArray)\n\n  const outputChildComment = (targetCommentArray) => {\n    const result = (<>\n      {\n        targetCommentArray.map((comment, i) => {\n          return (\n            <div key={comment.commentId} style={{ marginLeft: `${30}px` }}>\n                {commentOutput(comment)}\n                <hr />\n                {1 <= comment.childComment.length ? outputChildComment( comment.childComment) : null}\n            </div>\n          )\n        })\n      }\n    </>)\n    return result;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n      <div>\n        {outputChildComment(viewCommentArray)}\n\n        <div>\n          <input type=\"text\" value={inputUserName}\n            onChange={(e) => {\n              setInputUserName(e.target.value);\n            }}\n            placeholder='ユーザー名'\n          />\n          <input type=\"text\" value={inputUserDescription}\n            onChange={(e) => {\n              setInputUserDescription(e.target.value);\n            }}\n            placeholder='自己紹介文'\n          />\n          <button onClick={async () => {\n            await postUserName(inputUserName, inputUserDescription);\n            localStorage.setItem('posns_username', inputUserName);\n            localStorage.setItem('posns_userdesc', inputUserDescription);\n            reloadComment()\n          }}>ユーザー名設定</button>\n          <br />\n          <input type=\"text\" value={inputReplyUserId}\n            onChange={(e) => {\n              setInputReplyUserId(e.target.value);\n            }}\n            placeholder='返信ユーザーID'\n          />\n          <input type=\"text\" value={inputReplyTextId}\n            onChange={(e) => {\n              setInputReplyTextId(e.target.value);\n            }}\n            placeholder='返信テキストID'\n          />\n          <br />\n          <textarea value={inputText}\n            onChange={(e) => {\n              setInputText(e.target.value);\n            }}\n            placeholder='投稿内容'\n          />\n          <button onClick={async () => {\n            if (inputText !== '') {\n              const postTextResult = await postText(\n                inputText,\n                complementUserId(inputReplyUserId, userArray),\n                complementTextId(inputReplyTextId, commentArray)\n              );\n              // console.log({postTextResult})\n              setInputText('');\n              setInputReplyUserId('');\n              setInputReplyTextId('');\n              // console.log('postText', inputText)\n            }\n            // console.log('onClick before reloadComment', inputText)\n            reloadComment()\n          }}>書き込み/表示更新</button>\n          <br />\n        </div>\n\n        <br />\n\n      </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}